{"version":3,"mappings":";yIAeA,MAAMA,EAAiD,CACrD,mBAAoB,iBACpB,mBAAoB,oBACpB,kBAAmB,iBACnB,mBAAoB,iBACpB,iBAAkB,kBAClB,qBAAsB,mBACxB,EAEMC,EAA2B,IAAM,CACrC,KAAM,CAAE,GAAIC,CAAA,EAAcC,EAAA,EACpB,CAACC,EAAkBC,CAAmB,EAC1CC,EAAM,SAA4D,IAAI,EAClE,CAACC,EAAOC,CAAQ,EAAIF,EAAM,SAAuB,IAAI,EACrD,CAACG,EAAWC,CAAY,EAAIJ,EAAM,SAAS,EAAI,EAqErD,GAnEAA,EAAM,UAAU,IAAM,EACA,SAAY,CAC9B,GAAI,CAACJ,EAAW,CACdM,EAAS,IAAI,MAAM,wBAAwB,CAAC,EAC5CE,EAAa,EAAK,EAClB,MACF,CAGA,GAAI,CADYC,EAAS,KAAMC,GAAMA,EAAE,KAAOV,CAAS,EACzC,CACZM,EAAS,IAAI,MAAM,mBAAmB,CAAC,EACvCE,EAAa,EAAK,EAClB,MACF,CAEA,MAAMG,EAAgBb,EAAoBE,CAAS,EACnD,GAAI,CAACW,EAAe,CAClBL,EAAS,IAAI,MAAM,2CAA2C,CAAC,EAC/DE,EAAa,EAAK,EAClB,MACF,CAEA,GAAI,CAEF,IAAII,EAEJ,OAAQD,EAAA,CACN,IAAK,iBACHC,EAAyB,MAAAC,EAAA,IAAM,OAAO,8BAAkB,kCACxD,MACF,IAAK,oBACHD,EAAyB,MAAAC,EAAA,IAAM,OAAO,iCAAqB,kCAC3D,MACF,IAAK,iBACHD,EAAyB,MAAAC,EAAA,IAAM,OAAO,8BAAkB,kCACxD,MACF,IAAK,iBACHD,EAAyB,MAAAC,EAAA,IAAM,OAAO,8BAAkB,kCACxD,MACF,IAAK,kBACHD,EAAyB,MAAAC,EAAA,IAAM,OAAO,+BAAmB,kCACzD,MACF,IAAK,oBACHD,EAAyB,MAAAC,EAAA,IAAM,OAAO,iCAAqB,mCAC3D,MACF,QACE,MAAM,IAAI,MAAM,0BAA0BF,CAAa,EAAE,EAI7D,GAAI,EAACC,GAAA,MAAAA,EAAwB,SAC3B,MAAM,IAAI,MAAM,aAAaD,CAAa,wBAAwB,EAIpER,EAAoB,IAAMS,EAAuB,OAAO,CAC1D,OAASE,EAAK,CACZ,QAAQ,MAAM,qCAAqCH,CAAa,GAAIG,CAAG,EACvER,EAASQ,CAAY,CACvB,SACEN,EAAa,EAAK,CACpB,CACF,GAEA,CACF,EAAG,CAACR,CAAS,CAAC,EAEVO,EACF,aACG,OAAI,UAAU,gDACb,SAAAQ,OAAC,OAAI,UAAU,2CACb,UAAAC,MAAC,OAAI,UAAU,0EAA0E,EACzFA,MAAC,KAAE,UAAU,mDAAmD,sCAEhE,GACF,EACF,EAIJ,GAAIX,EACF,aAAQY,EAAA,EAAS,EAGnB,GAAI,CAACf,EACH,aAAQe,EAAA,EAAS,EAGnB,MAAMC,EAAUT,EAAS,KAAMC,GAAMA,EAAE,KAAOV,CAAS,EACjDmB,EAAeV,EAAS,UAAWC,GAAMA,EAAE,KAAOV,CAAS,EAC3DoB,EAAgBX,EAAS,OAE/B,OAAKS,EAKHF,MAAC,OAAI,UAAU,wEACb,SAAAA,MAACd,EAAA,CACC,QAAAgB,EACA,aAAAC,EACA,cAAAC,CAAA,GAEJ,QAVQH,EAAA,EAAS,CAYrB","names":["projectComponentMap","ProjectDetails","projectId","useParams","ProjectComponent","setProjectComponent","React","error","setError","isLoading","setIsLoading","projects","p","componentName","ProjectComponentModule","__vitePreload","err","jsxs","jsx","NotFound","project","currentIndex","totalProjects"],"ignoreList":[],"sources":["../../src/pages/Projects/ProjectDetails.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport type { Project } from '../../data/projects';\nimport { projects } from '../../data/projects';\nimport NotFound from '../NotFound';\n\n// Define the props type for project components\ntype ProjectComponentProps = {\n  project: Project;\n  currentIndex: number;\n  totalProjects: number;\n};\n\n// Map project IDs to their corresponding component file names (without .tsx)\nconst projectComponentMap: { [key: string]: string } = {\n  'zomato-dashboard': 'ZomatoAnalysis',\n  'bansal-dashboard': 'BansalSupermarket',\n  'ekam-attendance': 'EkamAttendance',\n  'powerbi-cashflow': 'RetailCashFlow',\n  'gpt-automation': 'SmartAutomation', // Updated to match the actual file name\n  'portfolio-creation': 'PortfolioCreation',\n};\n\nconst ProjectDetails: React.FC = () => {\n  const { id: projectId } = useParams<{ id: string }>();\n  const [ProjectComponent, setProjectComponent] =\n    React.useState<React.ComponentType<ProjectComponentProps> | null>(null);\n  const [error, setError] = React.useState<Error | null>(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const loadProject = async () => {\n      if (!projectId) {\n        setError(new Error('No project ID provided'));\n        setIsLoading(false);\n        return;\n      }\n\n      const project = projects.find((p) => p.id === projectId);\n      if (!project) {\n        setError(new Error('Project not found'));\n        setIsLoading(false);\n        return;\n      }\n\n      const componentName = projectComponentMap[projectId];\n      if (!componentName) {\n        setError(new Error('No valid component found for this project'));\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        // Use a switch statement to explicitly import each component\n        let ProjectComponentModule;\n\n        switch (componentName) {\n          case 'ZomatoAnalysis':\n            ProjectComponentModule = await import('./ZomatoAnalysis');\n            break;\n          case 'BansalSupermarket':\n            ProjectComponentModule = await import('./BansalSupermarket');\n            break;\n          case 'EkamAttendance':\n            ProjectComponentModule = await import('./EkamAttendance');\n            break;\n          case 'RetailCashFlow':\n            ProjectComponentModule = await import('./RetailCashFlow');\n            break;\n          case 'SmartAutomation':\n            ProjectComponentModule = await import('./SmartAutomation');\n            break;\n          case 'PortfolioCreation':\n            ProjectComponentModule = await import('./PortfolioCreation');\n            break;\n          default:\n            throw new Error(`No component found for ${componentName}`);\n        }\n\n        // Check if the module has a default export\n        if (!ProjectComponentModule?.default) {\n          throw new Error(`Component ${componentName} has no default export`);\n        }\n\n        // Set the component if all checks pass\n        setProjectComponent(() => ProjectComponentModule.default);\n      } catch (err) {\n        console.error(`Failed to load project component: ${componentName}`, err);\n        setError(err as Error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadProject();\n  }, [projectId]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[50vh]\">\n        <div className=\"animate-pulse flex flex-col items-center\">\n          <div className=\"w-12 h-12 rounded-full bg-foreground/10 dark:bg-dark-foreground/10 mb-4\"></div>\n          <p className=\"text-foreground/80 dark:text-dark-text-secondary\">\n            Loading project details...\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <NotFound />;\n  }\n\n  if (!ProjectComponent) {\n    return <NotFound />;\n  }\n\n  const project = projects.find((p) => p.id === projectId);\n  const currentIndex = projects.findIndex((p) => p.id === projectId);\n  const totalProjects = projects.length;\n\n  if (!project) {\n    return <NotFound />;\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 text-foreground dark:text-dark-foreground\">\n      <ProjectComponent\n        project={project}\n        currentIndex={currentIndex}\n        totalProjects={totalProjects}\n      />\n    </div>\n  );\n};\n\nexport default ProjectDetails;\n"],"file":"assets/ProjectDetails.Cbx1NI6f.js"}